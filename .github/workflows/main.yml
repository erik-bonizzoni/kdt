name: Build and Release KDT

# Controls when the action will run. 
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  push_to_registry:
    name: Build and KDT and push image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: '1.18'

      - name: Get Last Tag
        run: |
          git fetch --prune --unshallow --tags
          echo GIT_TAG=$(git describe --tags --abbrev=0) >> $GITHUB_ENV 
          
     - name: Get Version Tag
        id: get_version_tag
        run: |
          echo "VERSION_TAG=`${{ env.GIT_TAG }} | awk NR==1'{print $3}'|cut -d "-" -f1`" >> $GITHUB_ENV  

      - name: Build
        run: |
          make all
          _release/kdt-linux-amd64 version

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION_TAG }}
          release_name: Release ${{ env.VERSION_TAG }}
          prerelease: false
          draft: true
          body: |
           Changes in release
           - this

      - name: Upload Release Assets
        id: upload-release-assets 
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
          assets_path: ./_release/

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build docker image
        run: make image
     
      - name: Push to registry
        run: |
          docker tag kondukto/kondukto-cli:${{ env.VERSION_TAG }}
          docker push kondukto/kondukto-cli:${{ env.VERSION_TAG }}
          docker tag kondukto/kondukto-cli:latest
          docker push kondukto/kondukto-cli:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Deploy to S3
        run: |
          aws s3 cp ./get.sh s3://${{ secrets.AWS_S3_BUCKET_ID }}/index.html

      - name: Invalidate CDN
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"          
